import pygame
import cv2
import numpy as np
import pyttsx3
import threading
import time

video = cv2.VideoCapture(0)
faceDetect = cv2.CascadeClassifier("haarcascade_frontalface_default.xml")

pygame.init()

window = pygame.display.set_mode((1200, 700))

pygame.display.set_caption("Face Detection App")

img = pygame.image.load("bgimg1.png").convert()

# Initialize the text-to-speech engine
engine = pyttsx3.init()
engine.setProperty('rate', 150)

start = True
manual_mode = False
extra_buttons_visible = False

auto_button_rect = pygame.Rect(10, 10, 100, 50)
manual_button_rect = pygame.Rect(120, 10, 100, 50)
extra_button1_rect = pygame.Rect(10, 80, 100, 50)
extra_button2_rect = pygame.Rect(120, 80, 100, 50)

def check_faces():
    ret, frame = video.read()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = faceDetect.detectMultiScale(frame, 1.3, 5)
    return len(faces)

while start:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            start = False
            pygame.quit()

        if event.type == pygame.MOUSEBUTTONDOWN:
            if auto_button_rect.collidepoint(event.pos):
                print("Auto button clicked")
                # Check faces for 5 seconds
                start_time = time.time()
                elapsed_time = 0
                while elapsed_time < 5:
                    faces_count = check_faces()
                    if faces_count > 0:
                        extra_buttons_visible = False
                        if faces_count == 1:
                            # Speak 'Welcome' for 1 face
                            engine.say("Welcome")
                        else:
                            # Speak 'Welcome all' for more than 1 face
                            engine.say("Welcome all")
                        engine.runAndWait()
                        break
                    elapsed_time = time.time() - start_time

            elif manual_button_rect.collidepoint(event.pos):
                print("Manual button clicked")
                manual_mode = not manual_mode
                extra_buttons_visible = manual_mode

            elif extra_button1_rect.collidepoint(event.pos):
                print("Extra Button 1 clicked")
                extra_buttons_visible = False
                # Speak 'Welcome'
                engine.say("Step into the enchanting realm of IT Fest 2k24 as we extend a warm and graceful invitation to you.")
                engine.runAndWait()

            elif extra_button2_rect.collidepoint(event.pos):
                print("Extra Button 2 clicked")
                extra_buttons_visible = False
                # Speak 'Welcome all'
                engine.say("Greetings to everyone, we extend a warm welcome to IT Fest 2k24.")
                engine.runAndWait()


    ret, frame = video.read()
    gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
    faces = faceDetect.detectMultiScale(frame, 1.3, 5)

    for (x,y,w,h) in faces:
        x1,y1=x+w, y+h
        cv2.rectangle(frame, (x,y), (x+w, y+h), (0,0,255), 1)
        cv2.line(frame, (x,y), (x+30, y),(0,0,255), 6) #Top Left
        cv2.line(frame, (x,y), (x, y+30),(0,0,255), 6)

        cv2.line(frame, (x1,y), (x1-30, y),(0,0,255), 6) #Top Right
        cv2.line(frame, (x1,y), (x1, y+30),(0,0,255), 6)

        cv2.line(frame, (x,y1), (x+30, y1),(0,0,255), 6) #Bottom Left
        cv2.line(frame, (x,y1), (x, y1-30),(0,0,255), 6)

        cv2.line(frame, (x1,y1), (x1-30, y1),(0,0,255), 6) #Bottom right
        cv2.line(frame, (x1,y1), (x1, y1-30),(0,0,255), 6)
    imgRGB=cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    imgRGB=np.rot90(imgRGB)
    imgRGB=pygame.surfarray.make_surface(imgRGB).convert()


    font=pygame.font.Font("BebasNeue-Regular.ttf", 50)
    text=font.render("Face Detection  : {} Face Detected".format(len(faces)), True, (255,255,255))
    
    
    window.blit(img, (0,0))
    window.blit(imgRGB, (280,95))
    pygame.draw.rect(window, (144,238,144), (280,50,640,70), border_top_left_radius=10, border_top_right_radius=10)
    pygame.draw.rect(window, (144,238,144), (280,550,640,70), border_bottom_left_radius=10, border_bottom_right_radius=10)
    window.blit(text, (320,50))
    # Draw buttons
    pygame.draw.rect(window, (255, 0, 0), auto_button_rect, border_radius=5)  # Auto button
    pygame.draw.rect(window, (0, 0, 255), manual_button_rect, border_radius=5)  # Manual button

    if manual_mode:
        # Draw extra buttons if manual mode is active
        pygame.draw.rect(window, (0, 255, 0), extra_button1_rect, border_radius=5)  # Extra Button 1
        pygame.draw.rect(window, (0, 255, 0), extra_button2_rect, border_radius=5)  # Extra Button 2

    font_small = pygame.font.Font("BebasNeue-Regular.ttf", 20)
    text_auto = font_small.render("Auto", True, (255, 255, 255))
    text_manual = font_small.render("Manual", True, (255, 255, 255))
    text_extra1 = font_small.render("Extra 1", True, (255, 255, 255))
    text_extra2 = font_small.render("Extra 2", True, (255, 255, 255))

    window.blit(text_auto, (auto_button_rect.x + 20, auto_button_rect.y + 15))
    window.blit(text_manual, (manual_button_rect.x + 10, manual_button_rect.y + 15))

    if manual_mode:
        window.blit(text_extra1, (extra_button1_rect.x + 10, extra_button1_rect.y + 15))
        window.blit(text_extra2, (extra_button2_rect.x + 10, extra_button2_rect.y + 15))

    pygame.display.update()
